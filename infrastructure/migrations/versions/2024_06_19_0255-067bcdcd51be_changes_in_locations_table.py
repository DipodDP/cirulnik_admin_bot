"""Changes in userlocations table

Revision ID: 067bcdcd51be
Revises: 0d40872413ac
Create Date: 2024-06-19 02:55:58.625303

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector
from sqlalchemy.exc import NoSuchTableError


# revision identifiers, used by Alembic.
revision: str = "067bcdcd51be"
down_revision: Union[str, None] = "0d40872413ac"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind.engine)

    # Fetch all foreign keys for the userlocations table
    try:
        foreign_keys = inspector.get_foreign_keys("userlocations")
    except NoSuchTableError: 
        foreign_keys = []

    # Drop all existing foreign keys on location_id in userlocations table
    for fk in foreign_keys:
        if "location_id" in fk["constrained_columns"] and fk["name"]:
            op.drop_constraint(fk["name"], "userlocations", type_="foreignkey")

    # Create a new foreign key with a consistent name
    op.create_foreign_key(
        None,
        "userlocations",
        "locations",
        ["location_id"],
        ["location_id"],
        ondelete="RESTRICT",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind.engine)

    # Fetch all foreign keys for the userlocations table
    foreign_keys = inspector.get_foreign_keys("userlocations")

    # Drop all existing foreign keys on location_id in userlocations table
    for fk in foreign_keys:
        if "location_id" in fk["constrained_columns"] and fk["name"]:
            op.drop_constraint(fk["name"], "userlocations", type_="foreignkey")

    # Create the foreign key again with the original settings
    op.create_foreign_key(
        None,
        "userlocations",
        "locations",
        ["location_id"],
        ["location_id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###

